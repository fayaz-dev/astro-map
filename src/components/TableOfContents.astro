---
export interface Heading {
  depth: number;
  slug: string;
  text: string;
}

export interface Props {
  headings: Heading[];
}

const { headings } = Astro.props;

// Filter out h1 headings and ensure we have content
const tocHeadings = headings.filter(h => h.depth > 1 && h.depth <= 4);
---

{tocHeadings.length > 0 && (
  <div class="bg-gray-50 dark:bg-gray-800 rounded-lg p-6">
    <h3 class="text-lg font-semibold text-gray-900 dark:text-gray-100 mb-4 flex items-center gap-2">
      <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 10h16M4 14h16M4 18h16"></path>
      </svg>
      Table of Contents
    </h3>
    
    <nav class="toc">
      <ul class="space-y-2">
        {tocHeadings.map(heading => (
          <li class={`toc-item toc-depth-${heading.depth}`}>
            <a 
              href={`#${heading.slug}`}
              class="block text-sm text-gray-600 dark:text-gray-400 hover:text-primary-600 dark:hover:text-primary-400 transition-colors py-1"
              style={`padding-left: ${(heading.depth - 2) * 1}rem`}
            >
              {heading.text}
            </a>
          </li>
        ))}
      </ul>
    </nav>
  </div>
)}

<script>
  // Highlight current section in TOC
  const tocLinks = document.querySelectorAll('.toc a');
  const headings = document.querySelectorAll('h2, h3, h4, h5, h6');
  
  function updateTOC() {
    let current = '';
    
    headings.forEach(heading => {
      const rect = heading.getBoundingClientRect();
      if (rect.top <= 100) {
        current = heading.id;
      }
    });
    
    tocLinks.forEach(link => {
      link.classList.remove('text-primary-600', 'dark:text-primary-400', 'font-medium');
      link.classList.add('text-gray-600', 'dark:text-gray-400');
      
      if (link.getAttribute('href') === `#${current}`) {
        link.classList.add('text-primary-600', 'dark:text-primary-400', 'font-medium');
        link.classList.remove('text-gray-600', 'dark:text-gray-400');
      }
    });
  }
  
  // Smooth scroll for TOC links
  tocLinks.forEach(link => {
    link.addEventListener('click', (e) => {
      e.preventDefault();
      const targetId = link.getAttribute('href')?.substring(1);
      const targetElement = document.getElementById(targetId || '');
      
      if (targetElement) {
        targetElement.scrollIntoView({
          behavior: 'smooth',
          block: 'start'
        });
      }
    });
  });
  
  // Update TOC on scroll
  window.addEventListener('scroll', updateTOC);
  updateTOC(); // Initial call
</script>