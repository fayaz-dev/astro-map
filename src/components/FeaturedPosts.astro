---
import { getCollection } from 'astro:content';
import { formatDate } from '@/utils/date';

const allPosts = await getCollection('blog');
const featuredPosts = allPosts
  .filter(post => post.data.featured && !post.data.draft)
  .sort((a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf())
  .slice(0, 3);
---

<section class="py-16 bg-white dark:bg-gray-800">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="text-center mb-12">
      <h2 class="text-3xl md:text-4xl font-bold text-gray-900 dark:text-white mb-4">
        Featured Posts
      </h2>
      <p class="text-lg text-gray-600 dark:text-gray-300 max-w-2xl mx-auto">
        Discover the latest insights, tutorials, and creative explorations from the world of development and design.
      </p>
    </div>
    
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
      {featuredPosts.map((post, index) => (
        <article class="group bg-gray-50 dark:bg-gray-900 rounded-lg overflow-hidden shadow-sm hover:shadow-lg transition-all duration-300 hover:-translate-y-1">
          {post.data.image && (
            <div class="aspect-video overflow-hidden">
              <img 
                src={post.data.image} 
                alt={post.data.imageAlt || post.data.title}
                class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                loading="lazy"
              />
            </div>
          )}
          
          <div class="p-6">
            <div class="flex items-center gap-2 text-sm text-gray-500 dark:text-gray-400 mb-3">
              <time datetime={post.data.publishDate.toISOString()}>
                {formatDate(post.data.publishDate)}
              </time>
              {post.data.readingTime && (
                <>
                  <span>â€¢</span>
                  <span>{post.data.readingTime} min read</span>
                </>
              )}
            </div>
            
            <h3 class="text-xl font-semibold text-gray-900 dark:text-white mb-3 group-hover:text-primary-600 dark:group-hover:text-primary-400 transition-colors">
              <a href={`/blog/${post.slug}`} class="stretched-link">
                {post.data.title}
              </a>
            </h3>
            
            <p class="text-gray-600 dark:text-gray-300 mb-4 line-clamp-3">
              {post.data.description}
            </p>
            
            <div class="flex flex-wrap gap-2">
              {post.data.tags.slice(0, 3).map(tag => (
                <span class="px-2 py-1 bg-primary-100 dark:bg-primary-900 text-primary-800 dark:text-primary-200 rounded text-xs">
                  #{tag}
                </span>
              ))}
            </div>
          </div>
        </article>
      ))}
    </div>
    
    <div class="text-center mt-12">
      <a 
        href="/blog" 
        class="inline-flex items-center gap-2 px-6 py-3 bg-primary-600 text-white rounded-lg hover:bg-primary-700 transition-colors font-medium"
      >
        View All Posts
        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
        </svg>
      </a>
    </div>
  </div>
</section>